{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useImmediateUpdateEffect","result":{"data":{"docpocalypse":{"id":"2435b0c3-c350-59d3-b6cb-f8c86afa3e81","tsType":{"id":"15a7e4ac-0c8c-59b3-8869-7d4eb54d4bfa","name":"useImmediateUpdateEffect","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"facb1f29-c122-58a5-9b69-b318728458cb","name":"useImmediateUpdateEffect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"An _immediate_ effect that runs an effect callback when its dependency array\nchanges. This is helpful for updates should must run during render, most\ncommonly state derived from props; a more ergonomic version of https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops","text":"```ts\nfunction Example({ value }) {\n  const [intermediaryValue, setValue] = useState(value);\n\n  useImmediateUpdateEffect(() => {\n    setValue(value)\n  }, [value])\n```\n"},"parameters":[{"id":"efd60361-f667-5007-ab82-a4f35461b488","name":"effect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"EffectCallback"},"parent":"facb1f29-c122-58a5-9b69-b318728458cb","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null},{"id":"1d740f3a-604e-5280-b60f-0c70cb500c52","name":"deps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DependencyList"},"parent":"facb1f29-c122-58a5-9b69-b318728458cb","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"15a7e4ac-0c8c-59b3-8869-7d4eb54d4bfa","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useImmediateUpdateEffect.ts","description":{"id":"bc3ec59a-297f-51f7-986e-ffeecadee3cc","parent":"facb1f29-c122-58a5-9b69-b318728458cb","mdx":{"id":"e2c99e7f-11ab-536d-8b0a-50217d22c60a","parent":"bc3ec59a-297f-51f7-986e-ffeecadee3cc","frontmatter":{"title":""},"exports":{},"rawBody":"An _immediate_ effect that runs an effect callback when its dependency array\nchanges. This is helpful for updates should must run during render, most\ncommonly state derived from props; a more ergonomic version of https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n```ts\nfunction Example({ value }) {\n  const [intermediaryValue, setValue] = useState(value);\n\n  useImmediateUpdateEffect(() => {\n    setValue(value)\n  }, [value])\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"immediate\"), \" effect that runs an effect callback when its dependency array\\nchanges. This is helpful for updates should must run during render, most\\ncommonly state derived from props; a more ergonomic version of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\"\n  }), \"https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"function Example({ value }) {\\n  const [intermediaryValue, setValue] = useState(value);\\n\\n  useImmediateUpdateEffect(() => {\\n    setValue(value)\\n  }, [value])\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"2103d972-671e-557d-8cc7-d9f52bc22c9e","parent":"bc3ec59a-297f-51f7-986e-ffeecadee3cc","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"An _immediate_ effect that runs an effect callback when its dependency array\nchanges. This is helpful for updates should must run during render, most\ncommonly state derived from props; a more ergonomic version of https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n```ts\nfunction Example({ value }) {\n  const [intermediaryValue, setValue] = useState(value);\n\n  useImmediateUpdateEffect(() => {\n    setValue(value)\n  }, [value])\n```\n","html":"<p>An <em>immediate</em> effect that runs an effect callback when its dependency array\nchanges. This is helpful for updates should must run during render, most\ncommonly state derived from props; a more ergonomic version of <a href=\"https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\">https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops</a></p>\n<pre><code class=\"language-ts\">function Example({ value }) {\n  const [intermediaryValue, setValue] = useState(value);\n\n  useImmediateUpdateEffect(() => {\n    setValue(value)\n  }, [value])\n</code></pre>"}}}],"parent":"10c35cfa-3c84-5112-a209-b4c79fc93a33","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useImmediateUpdateEffect.ts"},"type":"hook","name":"useImmediateUpdateEffect","packageName":"@restart/hooks","importName":"import useImmediateUpdateEffect from '@restart/hooks/useImmediateUpdateEffect'","tags":[{"name":"category","value":"effects"}],"example":null,"signatures":[{"kind":"function","name":"useImmediateUpdateEffect","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"immediate\"), \" effect that runs an effect callback when its dependency array\\nchanges. This is helpful for updates should must run during render, most\\ncommonly state derived from props; a more ergonomic version of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\"\n  }), \"https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"function Example({ value }) {\\n  const [intermediaryValue, setValue] = useState(value);\\n\\n  useImmediateUpdateEffect(() => {\\n    setValue(value)\\n  }, [value])\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"effect","description":null,"examples":null,"type":{"typeDef":null,"name":"EffectCallback","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null},{"name":"deps","description":null,"examples":null,"type":{"typeDef":null,"name":"DependencyList","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":null,"members":{"static":null}}]}},"pageContext":{"nodeId":"2435b0c3-c350-59d3-b6cb-f8c86afa3e81","exampleId":null}}}