{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useTimeout","result":{"data":{"docpocalypse":{"id":"c3ddf2d1-462a-5fb6-8d31-12946cfe9967","tsType":{"id":"8c91ece7-3a67-504d-ab11-a7eecd52a7ac","name":"useTimeout","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"2c1ae637-42f0-56d2-bf4c-cce3a34f339d","name":"useTimeout","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"Returns a controller object for setting a timeout that is properly cleaned up\nonce the component unmounts. New timeouts cancel and replace existing ones.","text":"```tsx\nconst { set, clear } = useTimeout();\nconst [hello, showHello] = useState(false);\n//Display hello after 5 seconds\nset(() => showHello(true), 5000);\nreturn (\n  <div className=\"App\">\n    {hello ? <h3>Hello</h3> : null}\n  </div>\n);\n```\n"},"type":{"type":"reflection","declaration":{"id":"05c92795-13f3-53b3-ab26-d1460e73a053","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"groups":[{"title":"Variables","kind":32,"children":["f4e3e406-2399-5725-b524-2ca94a6d0ec1","81f46ebc-e88c-58ed-9f17-514021632e01"]}],"parent":"2c1ae637-42f0-56d2-bf4c-cce3a34f339d","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[{"id":"f4e3e406-2399-5725-b524-2ca94a6d0ec1","name":"clear","kind":32,"kindString":"Variable","flags":{"isExported":true},"type":{"type":"reference","name":"clear"},"parent":"05c92795-13f3-53b3-ab26-d1460e73a053","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useTimeout.ts"},{"id":"81f46ebc-e88c-58ed-9f17-514021632e01","name":"set","kind":32,"kindString":"Variable","flags":{"isExported":true},"type":{"type":"reference","name":"set"},"parent":"05c92795-13f3-53b3-ab26-d1460e73a053","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useTimeout.ts"}],"signatures":[],"parameters":[],"typeParameter":[],"absolutePath":null}},"parent":"8c91ece7-3a67-504d-ab11-a7eecd52a7ac","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useTimeout.ts","description":{"id":"a5345b1d-7fe4-567d-9ec2-9149d79a1bb4","parent":"2c1ae637-42f0-56d2-bf4c-cce3a34f339d","mdx":{"id":"5c6ca42e-bf8a-5764-bae8-3d6e670cd740","parent":"a5345b1d-7fe4-567d-9ec2-9149d79a1bb4","frontmatter":{"title":""},"exports":{},"rawBody":"Returns a controller object for setting a timeout that is properly cleaned up\nonce the component unmounts. New timeouts cancel and replace existing ones.\n```tsx\nconst { set, clear } = useTimeout();\nconst [hello, showHello] = useState(false);\n//Display hello after 5 seconds\nset(() => showHello(true), 5000);\nreturn (\n  <div className=\"App\">\n    {hello ? <h3>Hello</h3> : null}\n  </div>\n);\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Returns a controller object for setting a timeout that is properly cleaned up\\nonce the component unmounts. New timeouts cancel and replace existing ones.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"const { set, clear } = useTimeout();\\nconst [hello, showHello] = useState(false);\\n//Display hello after 5 seconds\\nset(() => showHello(true), 5000);\\nreturn (\\n  <div className=\\\"App\\\">\\n    {hello ? <h3>Hello</h3> : null}\\n  </div>\\n);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"7f7940d7-6f70-5d93-b3c3-c2f5c0506acb","parent":"a5345b1d-7fe4-567d-9ec2-9149d79a1bb4","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Returns a controller object for setting a timeout that is properly cleaned up\nonce the component unmounts. New timeouts cancel and replace existing ones.\n```tsx\nconst { set, clear } = useTimeout();\nconst [hello, showHello] = useState(false);\n//Display hello after 5 seconds\nset(() => showHello(true), 5000);\nreturn (\n  <div className=\"App\">\n    {hello ? <h3>Hello</h3> : null}\n  </div>\n);\n```\n","html":"<p>Returns a controller object for setting a timeout that is properly cleaned up\nonce the component unmounts. New timeouts cancel and replace existing ones.</p>\n<pre><code class=\"language-tsx\">const { set, clear } = useTimeout();\nconst [hello, showHello] = useState(false);\n//Display hello after 5 seconds\nset(() => showHello(true), 5000);\nreturn (\n  &#x3C;div className=\"App\">\n    {hello ? &#x3C;h3>Hello&#x3C;/h3> : null}\n  &#x3C;/div>\n);\n</code></pre>"}}}],"parent":"fbc7932f-32c9-54f9-8f4c-e00917baa11b","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useTimeout.ts"},"type":"hook","name":"useTimeout","packageName":"@restart/hooks","importName":"import useTimeout from '@restart/hooks/useTimeout'","tags":[],"example":null,"signatures":[{"kind":"function","name":"useTimeout","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Returns a controller object for setting a timeout that is properly cleaned up\\nonce the component unmounts. New timeouts cancel and replace existing ones.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"const { set, clear } = useTimeout();\\nconst [hello, showHello] = useState(false);\\n//Display hello after 5 seconds\\nset(() => showHello(true), 5000);\\nreturn (\\n  <div className=\\\"App\\\">\\n    {hello ? <h3>Hello</h3> : null}\\n  </div>\\n);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":null,"properties":null,"optional":false,"returns":null,"members":{"static":null}}]}},"pageContext":{"nodeId":"c3ddf2d1-462a-5fb6-8d31-12946cfe9967","exampleId":null}}}