{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useCallbackRef","result":{"data":{"docpocalypse":{"id":"fc4773f9-70e7-5538-9a8b-06323ce37074","tsType":{"id":"87300e0b-44ba-5980-b06c-a2ac43ec14fc","name":"useCallbackRef","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"8a572bc3-7016-5214-94d4-c4b1199100d5","name":"useCallbackRef","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"A convenience hook around `useState` designed to be paired with\nthe component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\nCallback refs are useful over `useRef()` when you need to respond to the ref being set\ninstead of lazily accessing it in an effect.","text":"```ts\nconst [element, attachRef] = useCallbackRef<HTMLDivElement>()\n\nuseEffect(() => {\n  if (!element) return\n\n  const calendar = new FullCalendar.Calendar(element)\n\n  return () => {\n    calendar.destroy()\n  }\n}, [element])\n\nreturn <div ref={attachRef} />\n```\n"},"typeParameter":[{"id":"b279cc43-7a3b-5803-9f23-8ea6364ee6b7","name":"TValue","kind":131072,"kindString":"Type parameter","flags":{"isExported":true},"parent":"8a572bc3-7016-5214-94d4-c4b1199100d5","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"tuple","elements":[{"type":"union","types":[{"type":"typeParameter","name":"TValue"},{"type":"intrinsic","name":"null"}]},{"type":"reflection","declaration":{"id":"c2d887e4-354b-50b8-8325-5a930794dee7","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"26fafc16-79af-54c2-a821-951e1d0b89e9","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"d856fe78-cc28-52a6-8349-73d17b31d7c6","name":"ref","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"union","types":[{"type":"typeParameter","name":"TValue"},{"type":"intrinsic","name":"null"}]},"parent":"26fafc16-79af-54c2-a821-951e1d0b89e9","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"c2d887e4-354b-50b8-8325-5a930794dee7","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useCallbackRef.ts"}],"parent":"8a572bc3-7016-5214-94d4-c4b1199100d5","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useCallbackRef.ts"}}]},"parent":"87300e0b-44ba-5980-b06c-a2ac43ec14fc","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useCallbackRef.ts","description":{"id":"5fb5b8bd-f9b7-5bd4-bd22-45fc307d70eb","parent":"8a572bc3-7016-5214-94d4-c4b1199100d5","mdx":{"id":"d2c6a73f-e0c0-5405-8988-92bf6d1f5a34","parent":"5fb5b8bd-f9b7-5bd4-bd22-45fc307d70eb","frontmatter":{"title":""},"exports":{},"rawBody":"A convenience hook around `useState` designed to be paired with\nthe component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\nCallback refs are useful over `useRef()` when you need to respond to the ref being set\ninstead of lazily accessing it in an effect.\n```ts\nconst [element, attachRef] = useCallbackRef<HTMLDivElement>()\n\nuseEffect(() => {\n  if (!element) return\n\n  const calendar = new FullCalendar.Calendar(element)\n\n  return () => {\n    calendar.destroy()\n  }\n}, [element])\n\nreturn <div ref={attachRef} />\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A convenience hook around \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" designed to be paired with\\nthe component \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\"\n  }), \"callback ref\"), \" api.\\nCallback refs are useful over \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useRef()\"), \" when you need to respond to the ref being set\\ninstead of lazily accessing it in an effect.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const [element, attachRef] = useCallbackRef<HTMLDivElement>()\\n\\nuseEffect(() => {\\n  if (!element) return\\n\\n  const calendar = new FullCalendar.Calendar(element)\\n\\n  return () => {\\n    calendar.destroy()\\n  }\\n}, [element])\\n\\nreturn <div ref={attachRef} />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"c07193b8-d28d-570c-949a-015280aaa7c6","parent":"5fb5b8bd-f9b7-5bd4-bd22-45fc307d70eb","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"A convenience hook around `useState` designed to be paired with\nthe component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\nCallback refs are useful over `useRef()` when you need to respond to the ref being set\ninstead of lazily accessing it in an effect.\n```ts\nconst [element, attachRef] = useCallbackRef<HTMLDivElement>()\n\nuseEffect(() => {\n  if (!element) return\n\n  const calendar = new FullCalendar.Calendar(element)\n\n  return () => {\n    calendar.destroy()\n  }\n}, [element])\n\nreturn <div ref={attachRef} />\n```\n","html":"<p>A convenience hook around <code>useState</code> designed to be paired with\nthe component <a href=\"https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\">callback ref</a> api.\nCallback refs are useful over <code>useRef()</code> when you need to respond to the ref being set\ninstead of lazily accessing it in an effect.</p>\n<pre><code class=\"language-ts\">const [element, attachRef] = useCallbackRef&#x3C;HTMLDivElement>()\n\nuseEffect(() => {\n  if (!element) return\n\n  const calendar = new FullCalendar.Calendar(element)\n\n  return () => {\n    calendar.destroy()\n  }\n}, [element])\n\nreturn &#x3C;div ref={attachRef} />\n</code></pre>"}}}],"parent":"a8406d95-add3-5d58-9cfe-cb28a13e9a77","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useCallbackRef.ts"},"type":"hook","name":"useCallbackRef","packageName":"@restart/hooks","importName":"import useCallbackRef from '@restart/hooks/useCallbackRef'","tags":[{"name":"category","value":"refs"}],"example":null,"signatures":[{"kind":"function","name":"useCallbackRef","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A convenience hook around \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState\"), \" designed to be paired with\\nthe component \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/refs-and-the-dom.html#callback-refs\"\n  }), \"callback ref\"), \" api.\\nCallback refs are useful over \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useRef()\"), \" when you need to respond to the ref being set\\ninstead of lazily accessing it in an effect.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const [element, attachRef] = useCallbackRef<HTMLDivElement>()\\n\\nuseEffect(() => {\\n  if (!element) return\\n\\n  const calendar = new FullCalendar.Calendar(element)\\n\\n  return () => {\\n    calendar.destroy()\\n  }\\n}, [element])\\n\\nreturn <div ref={attachRef} />\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":null,"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"UnionType","elements":[{"type":"NameExpression","name":"TValue","typeDef___NODE":null},{"type":"NullLiteral"}]},{"type":"FunctionType","params":[{"type":"ParameterType","name":"ref","expression":{"type":"UnionType","elements":[{"type":"NameExpression","name":"TValue"},{"type":"NullLiteral"}]}}],"result":{"type":"VoidLiteral"}}],"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"fc4773f9-70e7-5538-9a8b-06323ce37074","exampleId":null}}}