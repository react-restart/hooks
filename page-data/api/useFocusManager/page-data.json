{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useFocusManager","result":{"data":{"docpocalypse":{"id":"2f8052a7-55c4-531c-aa83-22130f4701cd","tsType":{"id":"0c6da67c-9943-5b96-8155-4aefe719a8d1","name":"useFocusManager","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"32a01acb-3baa-5fe8-8b18-45adbc1b257f","name":"useFocusManager","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"0c02ac0e-868e-5525-9c29-33ed07a689a9","name":"opts","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"reference","id":961,"name":"FocusManagerOptions","reference":{"id":"302fd0bf-be45-585a-a76c-3fb0028042c6","name":"FocusManagerOptions","kind":256,"kindString":"Interface","flags":{"isExported":true},"groups":[{"title":"Properties","kind":1024,"children":["1775a80a-f4c9-50bd-9e9c-99a003845163"]},{"title":"Methods","kind":2048,"children":["f5b693ea-95e7-5504-bd27-786c717793d4","adb6ce44-11e2-574e-87c7-0661b322d37e","001a4c2e-bd17-525d-b65d-cb7234cc1b9a"]}],"parent":"3387c434-c79e-5319-b7d8-ca41a9c7db92","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[{"id":"1775a80a-f4c9-50bd-9e9c-99a003845163","name":"isDisabled","kind":1024,"kindString":"Property","flags":{"isExported":true},"comment":{"shortText":"When true, the event handlers will not report focus changes"},"type":{"type":"reflection","declaration":{"id":"3b950616-bcb6-5063-96a4-8fca8419c5e7","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"5479cdfa-88e3-5ccd-9ee9-3736d1053ded","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"type":{"type":"intrinsic","name":"boolean"},"parent":"3b950616-bcb6-5063-96a4-8fca8419c5e7","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}],"parent":"1775a80a-f4c9-50bd-9e9c-99a003845163","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}},"parent":"302fd0bf-be45-585a-a76c-3fb0028042c6","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts","description":{"id":"242839b8-22ea-5b95-b7b8-5e79323bec5a","parent":"1775a80a-f4c9-50bd-9e9c-99a003845163","mdx":{"id":"35ba9a79-0bfe-50fa-b086-a25e3f28d7e4","parent":"242839b8-22ea-5b95-b7b8-5e79323bec5a","frontmatter":{"title":""},"exports":{},"rawBody":"When true, the event handlers will not report focus changes","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When true, the event handlers will not report focus changes\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"014fdf57-21d8-5658-ae31-f1e8821a199c","parent":"242839b8-22ea-5b95-b7b8-5e79323bec5a","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"When true, the event handlers will not report focus changes","html":"<p>When true, the event handlers will not report focus changes</p>"}}},{"id":"f5b693ea-95e7-5504-bd27-786c717793d4","name":"didHandle","kind":2048,"kindString":"Method","flags":{"isExported":true,"isOptional":true},"signatures":[{"id":"fd6886b3-ba8c-5358-9d63-50ba76e21121","name":"didHandle","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"A callback fired after focus is handled but before onChange is called"},"parameters":[{"id":"4a45b642-402d-5a65-8ffa-ff6070dcbfdd","name":"focused","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"intrinsic","name":"boolean"},"parent":"fd6886b3-ba8c-5358-9d63-50ba76e21121","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null},{"id":"6485c0bf-5233-57ba-baf0-fb7340e99cf9","name":"event","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"reference","name":"FocusEvent"},"parent":"fd6886b3-ba8c-5358-9d63-50ba76e21121","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"f5b693ea-95e7-5504-bd27-786c717793d4","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts","description":{"id":"2f192b6e-2506-5c39-bf2a-d63e094971a1","parent":"fd6886b3-ba8c-5358-9d63-50ba76e21121","mdx":{"id":"0b5db264-048e-5f03-a795-19e29711e04d","parent":"2f192b6e-2506-5c39-bf2a-d63e094971a1","frontmatter":{"title":""},"exports":{},"rawBody":"A callback fired after focus is handled but before onChange is called","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A callback fired after focus is handled but before onChange is called\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"49823982-ea40-5657-97b8-5aaa837fd1e2","parent":"2f192b6e-2506-5c39-bf2a-d63e094971a1","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"A callback fired after focus is handled but before onChange is called","html":"<p>A callback fired after focus is handled but before onChange is called</p>"}}}],"parent":"302fd0bf-be45-585a-a76c-3fb0028042c6","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"},{"id":"adb6ce44-11e2-574e-87c7-0661b322d37e","name":"onChange","kind":2048,"kindString":"Method","flags":{"isExported":true,"isOptional":true},"signatures":[{"id":"603ca4fb-a826-5104-847e-04341900d525","name":"onChange","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"A callback fired after focus has changed"},"parameters":[{"id":"a89164dc-7452-567c-9997-8f2abdd65580","name":"focused","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"intrinsic","name":"boolean"},"parent":"603ca4fb-a826-5104-847e-04341900d525","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null},{"id":"59bfad87-237e-5fc7-8967-7795dd16302e","name":"event","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"reference","name":"FocusEvent"},"parent":"603ca4fb-a826-5104-847e-04341900d525","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"adb6ce44-11e2-574e-87c7-0661b322d37e","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts","description":{"id":"3693b4ce-8b83-5104-9214-4dc169e69395","parent":"603ca4fb-a826-5104-847e-04341900d525","mdx":{"id":"95759619-5fc6-5c1f-b0a4-d9f32fbbb676","parent":"3693b4ce-8b83-5104-9214-4dc169e69395","frontmatter":{"title":""},"exports":{},"rawBody":"A callback fired after focus has changed","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A callback fired after focus has changed\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"0039b2ba-2289-5fbe-ac3d-dc224627dd17","parent":"3693b4ce-8b83-5104-9214-4dc169e69395","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"A callback fired after focus has changed","html":"<p>A callback fired after focus has changed</p>"}}}],"parent":"302fd0bf-be45-585a-a76c-3fb0028042c6","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"},{"id":"001a4c2e-bd17-525d-b65d-cb7234cc1b9a","name":"willHandle","kind":2048,"kindString":"Method","flags":{"isExported":true,"isOptional":true},"signatures":[{"id":"10aaea5d-e5f6-58c2-a054-195c66d0238a","name":"willHandle","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"A callback fired when focus shifts. returning `false` will prevent\nhandling the focus event"},"parameters":[{"id":"0a85d0e0-8d8e-51d2-9894-cd7bef0af79f","name":"focused","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"intrinsic","name":"boolean"},"parent":"10aaea5d-e5f6-58c2-a054-195c66d0238a","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null},{"id":"9e03b734-f84b-5f89-925b-6e86e7a34f7c","name":"event","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"reference","name":"FocusEvent"},"parent":"10aaea5d-e5f6-58c2-a054-195c66d0238a","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"void"}]},"parent":"001a4c2e-bd17-525d-b65d-cb7234cc1b9a","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts","description":{"id":"e530464b-0876-59d7-818d-07b9ebd6fc3c","parent":"10aaea5d-e5f6-58c2-a054-195c66d0238a","mdx":{"id":"e5bb4f32-b7b2-5824-8e63-2ee9cab047ee","parent":"e530464b-0876-59d7-818d-07b9ebd6fc3c","frontmatter":{"title":""},"exports":{},"rawBody":"A callback fired when focus shifts. returning `false` will prevent\nhandling the focus event","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A callback fired when focus shifts. returning \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"false\"), \" will prevent\\nhandling the focus event\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"e4362d94-7ed6-5b78-8fd9-0903c560e1d9","parent":"e530464b-0876-59d7-818d-07b9ebd6fc3c","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"A callback fired when focus shifts. returning `false` will prevent\nhandling the focus event","html":"<p>A callback fired when focus shifts. returning <code>false</code> will prevent\nhandling the focus event</p>"}}}],"parent":"302fd0bf-be45-585a-a76c-3fb0028042c6","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}],"signatures":[],"parameters":[],"typeParameter":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}},"parent":"32a01acb-3baa-5fe8-8b18-45adbc1b257f","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reference","id":977,"name":"FocusController","reference":{"id":"dcaeae6a-763a-5d6b-a393-e6df96fb7973","name":"FocusController","kind":256,"kindString":"Interface","flags":{"isExported":true},"groups":[{"title":"Properties","kind":1024,"children":["4aaaede9-2346-5042-93a9-a5025da3cb6c","889ece45-a78c-5177-abe8-7371d0ff04cc"]}],"parent":"3387c434-c79e-5319-b7d8-ca41a9c7db92","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[{"id":"4aaaede9-2346-5042-93a9-a5025da3cb6c","name":"onBlur","kind":1024,"kindString":"Property","flags":{"isExported":true},"type":{"type":"reflection","declaration":{"id":"26a480ba-f1c0-572a-a55c-815632866228","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"52d95761-3089-5160-89c8-871b841a8d0a","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"01b68366-6f71-58e6-9be5-ca53ad77f1bb","name":"event","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"intrinsic","name":"any"},"parent":"52d95761-3089-5160-89c8-871b841a8d0a","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"26a480ba-f1c0-572a-a55c-815632866228","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}],"parent":"4aaaede9-2346-5042-93a9-a5025da3cb6c","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}},"parent":"dcaeae6a-763a-5d6b-a393-e6df96fb7973","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"},{"id":"889ece45-a78c-5177-abe8-7371d0ff04cc","name":"onFocus","kind":1024,"kindString":"Property","flags":{"isExported":true},"type":{"type":"reflection","declaration":{"id":"f2793576-7c82-582b-b8f2-075a41e4f75c","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"6945fd1d-e4ef-5700-9682-b0a6b7d8941a","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"1fd3e5a7-96d5-58da-b670-cec7a756e571","name":"event","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"intrinsic","name":"any"},"parent":"6945fd1d-e4ef-5700-9682-b0a6b7d8941a","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"f2793576-7c82-582b-b8f2-075a41e4f75c","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}],"parent":"889ece45-a78c-5177-abe8-7371d0ff04cc","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}},"parent":"dcaeae6a-763a-5d6b-a393-e6df96fb7973","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}],"signatures":[],"parameters":[],"typeParameter":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"}},"parent":"0c6da67c-9943-5b96-8155-4aefe719a8d1","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts","description":{"id":"055b74f2-06d7-56f8-a2ca-d3597de22341","parent":"32a01acb-3baa-5fe8-8b18-45adbc1b257f","mdx":{"id":"2357c32a-d35d-52c4-9756-2c129cfa502e","parent":"055b74f2-06d7-56f8-a2ca-d3597de22341","frontmatter":{"title":""},"exports":{},"rawBody":"useFocusManager provides a way to track and manage focus as it moves around\na container element. An `onChange` is fired when focus enters or leaves the\nelement, but not when it moves around inside the element, similar to\n`pointerenter` and `pointerleave` DOM events.\n```tsx\nconst [focused, setFocusState] = useState(false)\n\nconst { onBlur, onFocus } = useFocusManager({\n  onChange: nextFocused => setFocusState(nextFocused)\n})\n\nreturn (\n  <div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n    {String(focused)}\n    <input />\n    <input />\n\n    <button>A button</button>\n  </div>\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"useFocusManager provides a way to track and manage focus as it moves around\\na container element. An \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" is fired when focus enters or leaves the\\nelement, but not when it moves around inside the element, similar to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointerenter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointerleave\"), \" DOM events.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"const [focused, setFocusState] = useState(false)\\n\\nconst { onBlur, onFocus } = useFocusManager({\\n  onChange: nextFocused => setFocusState(nextFocused)\\n})\\n\\nreturn (\\n  <div tabIndex=\\\"-1\\\" onFocus={onFocus} onBlur={onBlur}>\\n    {String(focused)}\\n    <input />\\n    <input />\\n\\n    <button>A button</button>\\n  </div>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"d0ca577a-1979-5f7b-b670-6a3003c0f9ba","parent":"055b74f2-06d7-56f8-a2ca-d3597de22341","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"useFocusManager provides a way to track and manage focus as it moves around\na container element. An `onChange` is fired when focus enters or leaves the\nelement, but not when it moves around inside the element, similar to\n`pointerenter` and `pointerleave` DOM events.\n```tsx\nconst [focused, setFocusState] = useState(false)\n\nconst { onBlur, onFocus } = useFocusManager({\n  onChange: nextFocused => setFocusState(nextFocused)\n})\n\nreturn (\n  <div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n    {String(focused)}\n    <input />\n    <input />\n\n    <button>A button</button>\n  </div>\n```\n","html":"<p>useFocusManager provides a way to track and manage focus as it moves around\na container element. An <code>onChange</code> is fired when focus enters or leaves the\nelement, but not when it moves around inside the element, similar to\n<code>pointerenter</code> and <code>pointerleave</code> DOM events.</p>\n<pre><code class=\"language-tsx\">const [focused, setFocusState] = useState(false)\n\nconst { onBlur, onFocus } = useFocusManager({\n  onChange: nextFocused => setFocusState(nextFocused)\n})\n\nreturn (\n  &#x3C;div tabIndex=\"-1\" onFocus={onFocus} onBlur={onBlur}>\n    {String(focused)}\n    &#x3C;input />\n    &#x3C;input />\n\n    &#x3C;button>A button&#x3C;/button>\n  &#x3C;/div>\n</code></pre>"}},"returnsDescription":{"id":"885507de-db36-59bf-ae31-6ded84b00b27","parent":"32a01acb-3baa-5fe8-8b18-45adbc1b257f","mdx":{"id":"e6f9cf5a-b128-561d-aa4f-0d7cd93e780c","parent":"885507de-db36-59bf-ae31-6ded84b00b27","frontmatter":{"title":""},"exports":{},"rawBody":"a memoized FocusController containing event handlers\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a memoized FocusController containing event handlers\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"b0c1d6d6-e8af-5952-91e2-fa8649b26fd5","parent":"885507de-db36-59bf-ae31-6ded84b00b27","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"a memoized FocusController containing event handlers\n","html":"<p>a memoized FocusController containing event handlers</p>"}}}],"parent":"3387c434-c79e-5319-b7d8-ca41a9c7db92","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useFocusManager.ts"},"type":"hook","name":"useFocusManager","packageName":"@restart/hooks","importName":"import useFocusManager from '@restart/hooks/useFocusManager'","tags":[{"name":"returns","value":"a memoized FocusController containing event handlers"}],"example":null,"signatures":[{"kind":"function","name":"useFocusManager","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"useFocusManager provides a way to track and manage focus as it moves around\\na container element. An \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" is fired when focus enters or leaves the\\nelement, but not when it moves around inside the element, similar to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointerenter\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pointerleave\"), \" DOM events.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-tsx\"\n  }), \"const [focused, setFocusState] = useState(false)\\n\\nconst { onBlur, onFocus } = useFocusManager({\\n  onChange: nextFocused => setFocusState(nextFocused)\\n})\\n\\nreturn (\\n  <div tabIndex=\\\"-1\\\" onFocus={onFocus} onBlur={onBlur}>\\n    {String(focused)}\\n    <input />\\n    <input />\\n\\n    <button>A button</button>\\n  </div>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"opts","description":null,"examples":null,"type":{"typeDef":null,"name":"FocusManagerOptions","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"a memoized FocusController containing event handlers\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"optional":false,"type":{"name":"FocusController","type":"NameExpression","elements":null,"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"2f8052a7-55c4-531c-aa83-22130f4701cd","exampleId":null}}}