{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useToggleState","result":{"data":{"docpocalypse":{"id":"eec63b53-2a0e-5f38-8a82-78c43a050c6b","tsType":{"id":"a080baae-c08b-50a4-8eae-be25aeac7a97","name":"useToggleState","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"0d8337bf-51fa-5943-936d-a2517ccc46c2","name":"useToggleState","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"87168e8d-3af8-5195-bf9f-9ee358bc42fc","name":"initialState","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"comment":{"text":"The initial boolean value"},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false","parent":"0d8337bf-51fa-5943-936d-a2517ccc46c2","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null,"description":{"id":"01149d74-8cc2-5ad1-8c70-c4b58ae1cbc9","parent":"87168e8d-3af8-5195-bf9f-9ee358bc42fc","mdx":{"id":"e7cfd043-1367-5c46-bc4f-e3f51c939df1","parent":"01149d74-8cc2-5ad1-8c70-c4b58ae1cbc9","frontmatter":{"title":""},"exports":{},"rawBody":"The initial boolean value","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The initial boolean value\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"2a596d69-49bf-5171-a86b-bc889e1b89b0","parent":"01149d74-8cc2-5ad1-8c70-c4b58ae1cbc9","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"The initial boolean value","html":"<p>The initial boolean value</p>"}}}],"type":{"type":"tuple","elements":[{"type":"intrinsic","name":"boolean"},{"type":"reflection","declaration":{"id":"1d0fa0ea-4a80-5081-beb3-9b8f39f8695f","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"9df5d6cd-849d-50f9-aa57-bd8071689834","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"71122f3f-08ef-58e5-8bf8-88a5321a325d","name":"value","kind":32768,"kindString":"Parameter","flags":{"isExported":true,"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"false"},{"type":"intrinsic","name":"true"}]},"parent":"9df5d6cd-849d-50f9-aa57-bd8071689834","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"1d0fa0ea-4a80-5081-beb3-9b8f39f8695f","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useToggleState.ts"}],"parent":"0d8337bf-51fa-5943-936d-a2517ccc46c2","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}}]},"parent":"a080baae-c08b-50a4-8eae-be25aeac7a97","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useToggleState.ts","description":{"id":"24c483f6-ca19-5578-a106-3ac442d424cf","parent":"0d8337bf-51fa-5943-936d-a2517ccc46c2","mdx":{"id":"5392de30-7623-5319-98e1-185b2c54e02f","parent":"24c483f6-ca19-5578-a106-3ac442d424cf","frontmatter":{"title":""},"exports":{},"rawBody":"Create a state setter pair for a boolean value that can be \"switched\".\nUnlike `useState(false)`, `useToggleState` will automatically flip the state\nvalue when its setter is called with no argument.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a state setter pair for a boolean value that can be \\\"switched\\\".\\nUnlike \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState(false)\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useToggleState\"), \" will automatically flip the state\\nvalue when its setter is called with no argument.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"99450174-8180-500d-9a3f-e4e7b307e5aa","parent":"24c483f6-ca19-5578-a106-3ac442d424cf","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Create a state setter pair for a boolean value that can be \"switched\".\nUnlike `useState(false)`, `useToggleState` will automatically flip the state\nvalue when its setter is called with no argument.","html":"<p>Create a state setter pair for a boolean value that can be \"switched\".\nUnlike <code>useState(false)</code>, <code>useToggleState</code> will automatically flip the state\nvalue when its setter is called with no argument.</p>"}},"returnsDescription":{"id":"b3a89de1-e3e8-5412-bbca-1e39f0a34784","parent":"0d8337bf-51fa-5943-936d-a2517ccc46c2","mdx":{"id":"a41b9ea1-3517-562d-af71-18f1784c514c","parent":"b3a89de1-e3e8-5412-bbca-1e39f0a34784","frontmatter":{"title":""},"exports":{},"rawBody":"A tuple of the current state and a setter\n\n```jsx\nconst [show, toggleShow] = useToggleState(false)\n\nreturn (\n  <>\n    <button onClick={() => toggleShow()}>\n      Toggle\n    <button>\n\n    {show && <strong>Now you can see me</strong>}\n  </>\n)\n\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A tuple of the current state and a setter\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const [show, toggleShow] = useToggleState(false)\\n\\nreturn (\\n  <>\\n    <button onClick={() => toggleShow()}>\\n      Toggle\\n    <button>\\n\\n    {show && <strong>Now you can see me</strong>}\\n  </>\\n)\\n\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"79f7f216-fce0-516d-8a01-5274aca10123","parent":"b3a89de1-e3e8-5412-bbca-1e39f0a34784","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"A tuple of the current state and a setter\n\n```jsx\nconst [show, toggleShow] = useToggleState(false)\n\nreturn (\n  <>\n    <button onClick={() => toggleShow()}>\n      Toggle\n    <button>\n\n    {show && <strong>Now you can see me</strong>}\n  </>\n)\n\n```\n","html":"<p>A tuple of the current state and a setter</p>\n<pre><code class=\"language-jsx\">const [show, toggleShow] = useToggleState(false)\n\nreturn (\n  &#x3C;>\n    &#x3C;button onClick={() => toggleShow()}>\n      Toggle\n    &#x3C;button>\n\n    {show &#x26;&#x26; &#x3C;strong>Now you can see me&#x3C;/strong>}\n  &#x3C;/>\n)\n</code></pre>"}}}],"parent":"5a1724e3-a3e7-5848-846f-aa5a1915a6d4","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useToggleState.ts"},"type":"hook","name":"useToggleState","packageName":"@restart/hooks","importName":"import useToggleState from '@restart/hooks/useToggleState'","tags":[{"name":"param","value":"The initial boolean value"},{"name":"returns","value":"A tuple of the current state and a setter\n\n```jsx\nconst [show, toggleShow] = useToggleState(false)\n\nreturn (\n  <>\n    <button onClick={() => toggleShow()}>\n      Toggle\n    <button>\n\n    {show && <strong>Now you can see me</strong>}\n  </>\n)\n\n```"}],"example":null,"signatures":[{"kind":"function","name":"useToggleState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Create a state setter pair for a boolean value that can be \\\"switched\\\".\\nUnlike \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useState(false)\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useToggleState\"), \" will automatically flip the state\\nvalue when its setter is called with no argument.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"initialState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The initial boolean value\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":"boolean","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A tuple of the current state and a setter\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const [show, toggleShow] = useToggleState(false)\\n\\nreturn (\\n  <>\\n    <button onClick={() => toggleShow()}>\\n      Toggle\\n    <button>\\n\\n    {show && <strong>Now you can see me</strong>}\\n  </>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"optional":false,"type":null}],"members":{"static":null}}]}},"pageContext":{"nodeId":"eec63b53-2a0e-5f38-8a82-78c43a050c6b","exampleId":null}}}