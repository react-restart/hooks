{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useMountEffect","result":{"data":{"docpocalypse":{"id":"ebf9a0cb-3f92-54e0-b4e4-271c5c46cdda","tsType":{"id":"0bc5e8f2-3fa8-56e2-9a47-31038bbdf843","name":"useMountEffect","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"4d16e71f-60c9-5480-b5e7-470ddeeb5cba","name":"useMountEffect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"shortText":"Run's an effect on mount, and is cleaned up on unmount. Generally\nuseful for interop with non-react plugins or components","text":"```ts\n useMountEffect(() => {\n   const plugin = $.myPlugin(ref.current)\n\n   return () => {\n     plugin.destroy()\n   }\n })\n```"},"parameters":[{"id":"e44afae6-5d7d-5c6b-b623-9474db52139f","name":"effect","kind":32768,"kindString":"Parameter","flags":{},"comment":{"text":"An effect to run on mount\n"},"type":{"type":"reference","name":"EffectCallback"},"parent":"4d16e71f-60c9-5480-b5e7-470ddeeb5cba","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null,"description":{"id":"74562962-baac-5609-a851-605113f69257","parent":"e44afae6-5d7d-5c6b-b623-9474db52139f","mdx":{"id":"eba6a3ee-f0d0-5d48-8837-431141933602","parent":"74562962-baac-5609-a851-605113f69257","frontmatter":{"title":""},"exports":{},"rawBody":"An effect to run on mount\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An effect to run on mount\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"b9b066c8-c2bd-5b33-8ede-d59d6a893283","parent":"74562962-baac-5609-a851-605113f69257","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"An effect to run on mount\n","html":"<p>An effect to run on mount</p>"}}}],"type":{"type":"intrinsic","name":"void"},"parent":"0bc5e8f2-3fa8-56e2-9a47-31038bbdf843","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMountEffect.ts","description":{"id":"4dcc99af-4f95-53ac-b5a7-9bb621ff590f","parent":"4d16e71f-60c9-5480-b5e7-470ddeeb5cba","mdx":{"id":"751ef989-9777-50a7-8e35-708a33a6dc0e","parent":"4dcc99af-4f95-53ac-b5a7-9bb621ff590f","frontmatter":{"title":""},"exports":{},"rawBody":"Run's an effect on mount, and is cleaned up on unmount. Generally\nuseful for interop with non-react plugins or components\n```ts\n useMountEffect(() => {\n   const plugin = $.myPlugin(ref.current)\n\n   return () => {\n     plugin.destroy()\n   }\n })\n```","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Run's an effect on mount, and is cleaned up on unmount. Generally\\nuseful for interop with non-react plugins or components\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \" useMountEffect(() => {\\n   const plugin = $.myPlugin(ref.current)\\n\\n   return () => {\\n     plugin.destroy()\\n   }\\n })\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"c350c17a-dcb6-5b71-86ce-fb5c43cf89ed","parent":"4dcc99af-4f95-53ac-b5a7-9bb621ff590f","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Run's an effect on mount, and is cleaned up on unmount. Generally\nuseful for interop with non-react plugins or components\n```ts\n useMountEffect(() => {\n   const plugin = $.myPlugin(ref.current)\n\n   return () => {\n     plugin.destroy()\n   }\n })\n```","html":"<p>Run's an effect on mount, and is cleaned up on unmount. Generally\nuseful for interop with non-react plugins or components</p>\n<pre><code class=\"language-ts\"> useMountEffect(() => {\n   const plugin = $.myPlugin(ref.current)\n\n   return () => {\n     plugin.destroy()\n   }\n })\n</code></pre>"}}}],"parent":"e3cb7d0f-868c-589d-84c8-e9f76a822205","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMountEffect.ts"},"type":"hook","name":"useMountEffect","packageName":"@restart/hooks","importName":"import useMountEffect from '@restart/hooks/useMountEffect'","tags":[{"name":"param","value":"An effect to run on mount"},{"name":"category","value":"effects"}],"example":null,"signatures":[{"kind":"function","name":"useMountEffect","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Run's an effect on mount, and is cleaned up on unmount. Generally\\nuseful for interop with non-react plugins or components\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \" useMountEffect(() => {\\n   const plugin = $.myPlugin(ref.current)\\n\\n   return () => {\\n     plugin.destroy()\\n   }\\n })\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"effect","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An effect to run on mount\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":"EffectCallback","type":"NameExpression","elements":null,"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":null,"members":{"static":null}}]}},"pageContext":{"nodeId":"ebf9a0cb-3f92-54e0-b4e4-271c5c46cdda","exampleId":null}}}