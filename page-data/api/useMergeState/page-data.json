{"componentChunkName":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx","path":"/api/useMergeState","result":{"data":{"docpocalypse":{"id":"2c543a61-e951-571f-a183-36719ab2ab82","tsType":{"id":"2005fdd2-22c4-544e-b60b-5ce106d1e4c1","name":"useMergeState","kind":64,"kindString":"Function","flags":{"isExported":true},"signatures":[{"id":"db28b93d-6b30-5e12-af5e-79483a13c086","name":"useMergeState","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"comment":{"shortText":"Mimics a React class component's state model, of having a single unified\n`state` object and an updater that merges updates into the existing state, as\nopposed to replacing it.","text":"```js\nconst [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n```\n"},"typeParameter":[{"id":"cfe1c2f6-2ebc-5eaf-baff-c35eda7acaea","name":"TState","kind":131072,"kindString":"Type parameter","flags":{"isExported":true},"type":{"type":"reflection","declaration":{"id":"658a941e-6fc8-52b1-a85e-f97300385124","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"parent":"eac94c4c-66f1-5414-b1b9-1de1825b80db","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}},"parent":"db28b93d-6b30-5e12-af5e-79483a13c086","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"parameters":[{"id":"eac94c4c-66f1-5414-b1b9-1de1825b80db","name":"initialState","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"comment":{"text":"The initial state object\n"},"type":{"type":"union","types":[{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"kind":-1,"kindString":"CircularReference","id":"658a941e-6fc8-52b1-a85e-f97300385124","name":"__type"}}},{"type":"reflection","declaration":{"id":"a6716eea-a001-5bc2-a2a7-1e2ec6801fbe","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"719e43fe-48d5-53e0-a61f-a3f05d78d9e5","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"type":{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"kind":-1,"kindString":"CircularReference","id":"658a941e-6fc8-52b1-a85e-f97300385124","name":"__type"}}},"parent":"a6716eea-a001-5bc2-a2a7-1e2ec6801fbe","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}],"parent":"eac94c4c-66f1-5414-b1b9-1de1825b80db","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}}]},"parent":"db28b93d-6b30-5e12-af5e-79483a13c086","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null,"description":{"id":"8b613d34-24d1-5650-bde5-370b4c59d63e","parent":"eac94c4c-66f1-5414-b1b9-1de1825b80db","mdx":{"id":"cf4ddd80-b56b-571b-ba66-0e5ac3ae0d47","parent":"8b613d34-24d1-5650-bde5-370b4c59d63e","frontmatter":{"title":""},"exports":{},"rawBody":"The initial state object\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The initial state object\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"0d7f29f4-19bc-56ed-afff-19317f659bb2","parent":"8b613d34-24d1-5650-bde5-370b4c59d63e","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"The initial state object\n","html":"<p>The initial state object</p>"}}}],"type":{"type":"tuple","elements":[{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"id":"658a941e-6fc8-52b1-a85e-f97300385124","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"parent":"eac94c4c-66f1-5414-b1b9-1de1825b80db","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}}},{"type":"reference","id":698,"typeArguments":[{"type":"typeParameter","name":"TState","constraint":{"type":"reflection","declaration":{"kind":-1,"kindString":"CircularReference","id":"658a941e-6fc8-52b1-a85e-f97300385124","name":"__type"}}}],"name":"MergeStateSetter","reference":{"id":"6e048fd5-4de2-58e6-82dd-4743e36968b3","name":"MergeStateSetter","kind":4194304,"kindString":"Type alias","flags":{"isExported":true},"comment":{"shortText":"Updates state, partial updates are merged into existing state values"},"typeParameter":[{"id":"64a43b70-0670-50c9-ba8e-ae6ed136270d","name":"TState","kind":131072,"kindString":"Type parameter","flags":{"isExported":true},"parent":"6e048fd5-4de2-58e6-82dd-4743e36968b3","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reflection","declaration":{"id":"9944ea2e-609d-515b-9d8b-aa350064dc3c","name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExported":true},"signatures":[{"id":"f826231c-0ddf-580a-857d-d9872640ed07","name":"__call","kind":4096,"kindString":"Call signature","flags":{"isExported":true},"parameters":[{"id":"82662b02-44b2-5000-b5b9-ca1276523b3c","name":"update","kind":32768,"kindString":"Parameter","flags":{"isExported":true},"type":{"type":"union","types":[{"type":"reference","id":693,"typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Updater","reference":{"id":"6d280647-e0da-5bbb-9db3-4d266a76a2d9","name":"Updater","kind":4194304,"kindString":"Type alias","flags":{},"typeParameter":[{"id":"6c195875-b5c9-5f39-875e-e9aecc8445b6","name":"TState","kind":131072,"kindString":"Type parameter","flags":{},"parent":"6d280647-e0da-5bbb-9db3-4d266a76a2d9","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"reflection","declaration":{"id":"060c3c29-91db-5704-a702-96b9bf7eb924","name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":"ccac89b6-ea6a-58f5-a8a8-47ce7ecff3b9","name":"__call","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":"99a02e2d-070c-5165-8a28-c8b96c98b95a","name":"state","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"typeParameter","name":"TState"},"parent":"ccac89b6-ea6a-58f5-a8a8-47ce7ecff3b9","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Partial"},{"type":"intrinsic","name":"null"}]},"parent":"060c3c29-91db-5704-a702-96b9bf7eb924","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}],"parent":"6d280647-e0da-5bbb-9db3-4d266a76a2d9","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}},"parent":"6d84be26-616f-57f3-8bf3-8969dc4e6aba","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}},{"type":"reference","typeArguments":[{"type":"typeParameter","name":"TState"}],"name":"Partial"},{"type":"intrinsic","name":"null"}]},"parent":"f826231c-0ddf-580a-857d-d9872640ed07","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":null}],"type":{"type":"intrinsic","name":"void"},"parent":"9944ea2e-609d-515b-9d8b-aa350064dc3c","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}],"parent":"6e048fd5-4de2-58e6-82dd-4743e36968b3","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"}},"parent":"6d84be26-616f-57f3-8bf3-8969dc4e6aba","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"parameters":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts","description":{"id":"f7817004-517d-5dd0-b1c6-a8b9c4f8f45d","parent":"6e048fd5-4de2-58e6-82dd-4743e36968b3","mdx":{"id":"660c4d6a-bd3a-5446-80c2-f848d3c3bf3a","parent":"f7817004-517d-5dd0-b1c6-a8b9c4f8f45d","frontmatter":{"title":""},"exports":{},"rawBody":"Updates state, partial updates are merged into existing state values","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Updates state, partial updates are merged into existing state values\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"1ce558b7-2fbf-5186-9c5a-bf944c62efee","parent":"f7817004-517d-5dd0-b1c6-a8b9c4f8f45d","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Updates state, partial updates are merged into existing state values","html":"<p>Updates state, partial updates are merged into existing state values</p>"}}}}]},"parent":"2005fdd2-22c4-544e-b60b-5ce106d1e4c1","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"signatures":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts","description":{"id":"4e063284-5b3a-59b9-b017-459234fe67b6","parent":"db28b93d-6b30-5e12-af5e-79483a13c086","mdx":{"id":"4dd007d3-a0d6-520d-ae83-6ce10427607d","parent":"4e063284-5b3a-59b9-b017-459234fe67b6","frontmatter":{"title":""},"exports":{},"rawBody":"Mimics a React class component's state model, of having a single unified\n`state` object and an updater that merges updates into the existing state, as\nopposed to replacing it.\n```js\nconst [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n```\n","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mimics a React class component's state model, of having a single unified\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" object and an updater that merges updates into the existing state, as\\nopposed to replacing it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\\n\\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\\n\\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"},"markdownRemark":{"id":"36913290-327c-5a2c-815a-77a61a2b3877","parent":"4e063284-5b3a-59b9-b017-459234fe67b6","frontmatter":{"title":""},"excerpt":"","rawMarkdownBody":"Mimics a React class component's state model, of having a single unified\n`state` object and an updater that merges updates into the existing state, as\nopposed to replacing it.\n```js\nconst [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n```\n","html":"<p>Mimics a React class component's state model, of having a single unified\n<code>state</code> object and an updater that merges updates into the existing state, as\nopposed to replacing it.</p>\n<pre><code class=\"language-js\">const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n</code></pre>"}}}],"parent":"6d84be26-616f-57f3-8bf3-8969dc4e6aba","rootDir":"/Users/brianreed/iambriansreed/hooks/src","tsconfig":"/Users/brianreed/iambriansreed/hooks/tsconfig.json","typedocs":[],"parameters":[],"typeParameter":[],"groups":[],"absolutePath":"/Users/brianreed/iambriansreed/hooks/src/useMergeState.ts"},"type":"hook","name":"useMergeState","packageName":"@restart/hooks","importName":"import useMergeState from '@restart/hooks/useMergeState'","tags":[{"name":"param","value":"The initial state object"}],"example":null,"signatures":[{"kind":"function","name":"useMergeState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Mimics a React class component's state model, of having a single unified\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"state\"), \" object and an updater that merges updates into the existing state, as\\nopposed to replacing it.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\\n\\nsetState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\\n\\nsetState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":[],"type":null,"params":[{"name":"initialState","description":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The initial state object\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"examples":null,"type":{"typeDef":null,"name":null,"type":"UnionType","elements":[{"type":"NameExpression","name":"TState","typeDef___NODE":null},{"type":"FunctionType","params":[],"result":{"type":"NameExpression","name":"TState"}}],"expression":null,"applications":null},"optional":false,"params":null,"properties":null,"returns":null,"members":null}],"properties":null,"optional":false,"returns":[{"name":null,"description":null,"optional":false,"type":{"name":null,"type":"ArrayType","elements":[{"type":"NameExpression","name":"TState","typeDef___NODE":null},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"MergeStateSetter","typeDef___NODE":"ceecb95f-5a76-5895-8f8b-5447d3a304e2","typeDef":{"commentNumber":0,"level":0,"id":"ceecb95f-5a76-5895-8f8b-5447d3a304e2","parent":"f636137d-74b6-5c04-86c9-29ee60a7fb4a","children":["26e5f0ed-6181-59f2-abe7-b186d5479dd9"],"internal":{"type":"DocumentationJs","contentDigest":"4aefe1656755caa300e50431ac8d7aaf","counter":2288,"owner":"gatsby-transformer-documentationjs"},"kind":"typedef","name":"MergeStateSetter","type":{"type":"FunctionType","params":[{"type":"ParameterType","name":"update","expression":{"type":"UnionType","elements":[{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Updater"},"applications":[{"type":"NameExpression","name":"TState"}]},{"type":"TypeApplication","expression":{"type":"NameExpression","name":"Partial"},"applications":[{"type":"NameExpression","name":"TState"}]},{"type":"NullLiteral"}]}}],"result":{"type":"VoidLiteral"}},"examples":[],"tags":[],"optional":false,"docsLocation":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"codeLocation":{"start":{"line":8,"column":0},"end":{"line":10,"column":9}},"description___NODE":"26e5f0ed-6181-59f2-abe7-b186d5479dd9","members":{}}},"applications":[{"type":"NameExpression","name":"TState","typeDef___NODE":null}]}],"expression":null,"applications":null}}],"members":{"static":null}}]}},"pageContext":{"nodeId":"2c543a61-e951-571f-a183-36719ab2ab82","exampleId":null}}}